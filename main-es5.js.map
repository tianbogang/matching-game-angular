{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/game/game-over/game-over.component.ts","webpack:///src/app/game/game-over/game-over.component.html","webpack:///src/app/game/new-game/new-game.component.ts","webpack:///src/app/game/new-game/new-game.component.html","webpack:///src/app/game/play-game/play-game.component.ts","webpack:///src/app/game/play-game/play-game.component.html","webpack:///src/app/game/stopwatch/stopwatch.component.ts","webpack:///src/app/game/stopwatch/stopwatch.component.html","webpack:///src/app/model/enums.ts","webpack:///src/app/model/game.ts","webpack:///src/app/service/game-service.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","appRoutes","path","component","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","GameOverComponent","router","service","timeUsed","currentGame","navigate","playAgain","NewGameComponent","difficulty","createNewGame","startNewGame","PlayGameComponent","route","paramMap","subscribe","params","Number","get","game","cardset1","cardset2","stopWatch","first","start","remainCards","matchedCards","anyRedCard","card","updateCardInCardsetUno","point","checkAndStop","updateCardInCardsetDue","setTimeout","noMoreCard","stop","counter","StopwatchComponent","ticking","tick","ellapsedCycles","Date","setSeconds","unsubscribe","CardState","GameDifficulty","Game","gameId","gameLevel","len","pts","n","push","shuffle","state","Closed","find","c","undefined","toggleStateInSameCardset","updateStateBetweenCardset","cardset","selectedCard","OpenGreen","Hidden","OpenRed","filter","length","providedIn","GameService","g","init","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NewGameComponent } from './game/new-game/new-game.component';\nimport { PlayGameComponent } from './game/play-game/play-game.component';\nimport { GameOverComponent } from './game/game-over/game-over.component';\n\nconst appRoutes: Routes = [\n  { path: '', component: NewGameComponent },\n  { path: 'newgame', component: NewGameComponent },\n  { path: 'playgame/:difficulty', component: PlayGameComponent },\n  { path: 'gameover', component: GameOverComponent },\n  { path: '**', redirectTo: '/newgame'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'matching-game-angular';\n}\n","<div class=\"container\" fxLayout>\n  <div fxFlex=\"100%\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatButtonModule} from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NewGameComponent } from './game/new-game/new-game.component';\nimport { PlayGameComponent } from './game/play-game/play-game.component';\nimport { GameOverComponent } from './game/game-over/game-over.component';\nimport { StopwatchComponent } from './game/stopwatch/stopwatch.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NewGameComponent,\n    PlayGameComponent,\n    GameOverComponent,\n    StopwatchComponent\n  ],\n  imports: [\n    MatButtonModule,\n    FlexLayoutModule,\n    MatIconModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GameService } from '../../service/game-service.service';\n\n@Component({\n  selector: 'app-game-over',\n  templateUrl: './game-over.component.html',\n  styleUrls: ['./game-over.component.css']\n})\nexport class GameOverComponent implements OnInit {\n\n  constructor(private router: Router, private service: GameService) { }\n\n  public timeUsed: Date;\n\n  ngOnInit(): void {\n    this.timeUsed = this.service.currentGame.timeUsed;\n  }\n\n  playAgain(): void {\n    this.router.navigate(['newgame']);\n  }\n}\n","<div class=\"container\" fxLayout=\"column\">\n    <div fxFlex=100 fxLayoutAlign=\"center center\">\n      <h1 class=\"center-text mhs\">Game Over</h1>  \n    </div>\n    <div fxFlex=100 fxLayoutAlign=\"center center\">\n      <h3 class=\"center-text mhs\">Time used: {{ timeUsed | date:'HH:mm:ss' }}</h3>  \n    </div>\n    <div fxFlex=100 fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <button mat-raised-button color=\"basic\" class=\"homeButton\" (click)=\"playAgain()\">Play Again</button>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GameDifficulty } from '../../model/enums';\nimport { GameService } from '../../service/game-service.service';\n\n@Component({\n  selector: 'app-new-game',\n  templateUrl: './new-game.component.html',\n  styleUrls: ['./new-game.component.css']\n})\nexport class NewGameComponent implements OnInit {\n\n  constructor(private router: Router, private service: GameService) { }\n\n  ngOnInit(): void {\n  }\n\n  public get GameDifficulty(): typeof GameDifficulty {\n    return GameDifficulty;\n  }\n\n  startNewGame(difficulty: GameDifficulty): void {\n    this.service.createNewGame(difficulty);\n    this.router.navigate(['playgame', difficulty]);\n  }\n}\n","<div class=\"container\" fxLayout=\"column\">\n    <div fxFlex=100 fxLayout=\"row\" fxLayoutAlign=\"center center\">\n        <img class=\"mr-10\" src=\"assets/images/logo.png\" width=\"48\" height=\"48\" />\n        <h1 class=\"mhs\">Matching Game</h1>\n    </div>  \n    <div fxFlex=100 fxLayoutAlign=\"center center\">\n      <h3 class=\"center-text mhs\">Please select game difficulty</h3>  \n    </div>\n    <div fxFlex=100 fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <button mat-raised-button color=\"basic\" class=\"homeButton\" (click)=\"startNewGame(GameDifficulty.Easy)\">Easy</button>\n      <button mat-raised-button color=\"primary\" class=\"homeButton\" (click)=\"startNewGame(GameDifficulty.Medium)\">Medium</button>\n      <button mat-raised-button color=\"warn\" class=\"homeButton\" (click)=\"startNewGame(GameDifficulty.Hard)\">Hard</button>\n    </div>\n</div>\n  \n","import { Component, OnInit, ViewChildren, QueryList, AfterViewInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { CardState } from 'src/app/model/enums';\nimport { Game } from '../../model/game';\nimport { Card } from '../../model/card';\nimport { GameService } from '../../service/game-service.service';\nimport { StopwatchComponent } from '../stopwatch/stopwatch.component';\n\n@Component({\n  selector: 'app-play-game',\n  templateUrl: './play-game.component.html',\n  styleUrls: ['./play-game.component.css']\n})\nexport class PlayGameComponent implements OnInit, AfterViewInit {\n\n  @ViewChildren (StopwatchComponent) stopWatch: QueryList<StopwatchComponent>;\n\n  public difficulty: number;\n\n  public game: Game;\n  public cardset1: Card[];\n  public cardset2: Card[];\n\n  constructor(private router: Router, private route: ActivatedRoute, private service: GameService) {\n  }\n\n  public get CardState(): typeof CardState {\n    return CardState;\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      this.difficulty = Number(params.get('difficulty'));\n    });\n\n    this.game = this.service.currentGame;\n    this.cardset1 = this.game.cardset1;\n    this.cardset2 = this.game.cardset2;\n  }\n\n  ngAfterViewInit() {\n    this.stopWatch.first.start();\n  }\n\n  noMoreCard() {\n    return (this.game.remainCards() === 0);\n  }\n\n  matchedCards() {\n    return this.game.matchedCards();\n  }\n\n  anyRedCard() {\n    return this.game.anyRedCard();\n  }\n\n  public gameIcon(): string {\n    if (this.matchedCards()) {\n      return 'thumb_up';\n    } else if (this.anyRedCard()) {\n      return 'thumb_down';\n    } else {\n      return 'verified_user';\n    }\n  }\n\n  onClickSet1(card: Card) {\n    this.game.updateCardInCardsetUno(card.point);\n    this.checkAndStop();\n  }\n\n  onClickSet2(card: Card) {\n    this.game.updateCardInCardsetDue(card.point);\n    this.checkAndStop();\n  }\n\n  checkAndStop() {\n    setTimeout (() => {\n        if (this.noMoreCard()) {\n          this.stopWatch.first.stop();\n          this.game.timeUsed = this.stopWatch.first.counter;\n          this.router.navigate(['gameover']);\n        }\n    }, 1000);\n  }\n}\n","<div class=\"container\" fxLayout=\"column\">\n    <div fxFlex=100 fxLayoutAlign=\"space-evenly center\">\n      <mat-icon>{{gameIcon()}}</mat-icon>\n      <h3 class=\"center-text normal-text\">Play Game: {{difficulty}} cards</h3>  \n      <app-stopwatch></app-stopwatch>\n    </div>\n    <div fxFlex=100 fxLayout=\"row wrap\" fxLayoutAlign=\"start center\" class=\"card-set\">\n      <ng-container *ngFor=\"let card of cardset1\">\n        <button class=\"card card-closed\" *ngIf=\"card.state === CardState.Closed\" (click)=\"onClickSet1(card)\"></button>\n        <button class=\"card card-green\" *ngIf=\"card.state === CardState.OpenGreen\" (click)=\"onClickSet1(card)\">{{card.point}}</button>\n        <div class=\"card card-red\" *ngIf=\"card.state === CardState.OpenRed\">{{card.point}}</div>\n        <div class=\"card card-hidden\" *ngIf=\"card.state === CardState.Hidden\"></div>\n      </ng-container>\n    </div>\n    <div fxFlex=100 fxLayout=\"row wrap\" fxLayoutAlign=\"start center\" class=\"card-set\">\n      <ng-container *ngFor=\"let card of cardset2\">\n        <button class=\"card card-closed\" *ngIf=\"card.state === CardState.Closed\" (click)=\"onClickSet2(card)\"></button>\n        <button class=\"card card-green\" *ngIf=\"card.state === CardState.OpenGreen\" (click)=\"onClickSet2(card)\">{{card.point}}</button>\n        <div class=\"card card-red\" *ngIf=\"card.state === CardState.OpenRed\">{{card.point}}</div>\n        <div class=\"card card-hidden\" *ngIf=\"card.state === CardState.Hidden\"></div>\n      </ng-container>\n    </div>\n</div>\n\n","import { LifecycleHooks } from '@angular/compiler/src/lifecycle_reflector';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { timer } from 'rxjs';\n\n@Component({\n  selector: 'app-stopwatch',\n  templateUrl: './stopwatch.component.html',\n  styleUrls: ['./stopwatch.component.css']\n})\nexport class StopwatchComponent implements OnInit, OnDestroy {\n\n  constructor() { }\n\n  public counter: Date;\n  private ticking: boolean;\n  private tick;\n\n  ngOnInit(): void {\n    this.ticking = false;\n    this.tick = timer(0, 1000).subscribe(ellapsedCycles => {\n      if (this.ticking) {\n        this.counter = new Date(0, 0, 0, 0, 0, 0);\n        this.counter.setSeconds(ellapsedCycles);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.tick.unsubscribe();\n  }\n\n  start() {\n    this.ticking = true;\n  }\n\n  stop() {\n    this.ticking = false;\n  }\n}\n","<h5 class=\"normal-text\">{{ counter | date:'HH:mm:ss' }}</h5>\n","export enum CardState {\n    Closed, OpenGreen, OpenRed, Hidden\n}\n\nexport enum GameDifficulty {\n    Easy = 3, Medium = 10, Hard = 25\n}\n","import { Injectable } from '@angular/core';\nimport { Card } from './card';\nimport { CardState } from './enums';\n\ndeclare function shuffle(array);\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Game {\n    public id: number;\n    public difficulty: number;\n    public cardset1: Card[];\n    public cardset2: Card[];\n    public timeUsed: Date;\n\n    constructor() {}\n\n    public init(gameId: number, gameLevel: number): void {\n        this.id = gameId;\n        this.difficulty = gameLevel;\n\n        const len = gameLevel;\n        let pts: number[] = [];\n        for (let n = 1; n <= len; n++) {\n            pts.push(n);\n        }\n\n        pts = shuffle(pts);\n        this.cardset1 = [];\n        for (let n = 1; n <= len; n++) {\n            const card: Card = {\n                point: pts[n - 1],\n                state: CardState.Closed\n            };\n            this.cardset1.push(card);\n        }\n\n        pts = shuffle(pts);\n        this.cardset2 = [];\n        for (let n = 1; n <= len; n++) {\n            const card: Card = {\n                point: pts[n - 1],\n                state: CardState.Closed\n            };\n            this.cardset2.push(card);\n        }\n    }\n\n    public updateCardInCardsetUno(point: number) {\n        const card = this.cardset1.find(c => c.point === point);\n        if (card !== undefined) {\n            this.toggleStateInSameCardset(this.cardset1, card);\n            this.updateStateBetweenCardset(this.cardset2, card);\n        }\n    }\n\n    public updateCardInCardsetDue(point: number) {\n        const card = this.cardset2.find(c => c.point === point);\n        if (card !== undefined) {\n            this.toggleStateInSameCardset(this.cardset2, card);\n            this.updateStateBetweenCardset(this.cardset1, card);\n        }\n    }\n\n    toggleStateInSameCardset(cardset: Card[], card: Card) {\n        const selectedCard = cardset.find(c => c.state === CardState.OpenGreen);\n        if (selectedCard !== undefined) {\n            selectedCard.state = CardState.Closed;\n            card.state = CardState.OpenGreen;\n        }\n    }\n\n    updateStateBetweenCardset(cardset: Card[], card: Card) {\n        const selectedCard = cardset.find(c => c.state === CardState.OpenGreen);\n        if (selectedCard !== undefined) {\n            if (selectedCard.point === card.point) {\n                card.state = CardState.OpenGreen;\n                setTimeout (() => {\n                    selectedCard.state = CardState.Hidden;\n                    card.state = CardState.Hidden;\n                }, 1000);\n            } else {\n                card.state = CardState.OpenRed;\n                setTimeout (() => {\n                    card.state = CardState.Closed;\n                }, 3000);\n            }\n        } else {\n          card.state = CardState.OpenGreen;\n        }\n    }\n\n    public remainCards(): number {\n        return (\n            this.cardset1.filter(c => c.state !== CardState.Hidden).length +\n            this.cardset2.filter(c => c.state !== CardState.Hidden).length\n        );\n    }\n\n    public matchedCards(): boolean {\n        return (\n            this.cardset1.filter(c => c.state === CardState.OpenGreen).length !== 0 &&\n            this.cardset2.filter(c => c.state === CardState.OpenGreen).length !== 0\n        );\n    }\n\n    public anyRedCard(): boolean {\n        return (\n            this.cardset1.filter(c => c.state === CardState.OpenRed).length !== 0 ||\n            this.cardset2.filter(c => c.state === CardState.OpenRed).length !== 0\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Game } from '../model/game';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameService {\n\n  public currentGame: Game;\n\n  public createNewGame(difficulty: number): void {\n    const g = new Game();\n    g.init(0, difficulty);\n    this.currentGame = g;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}